//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DnDServicePlayer.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="character", Namespace="http://schemas.datacontract.org/2004/07/DnDService")]
    [System.SerializableAttribute()]
    public partial class character : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] aptitudesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] avatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string backgroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.multiclass classesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity deityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eyesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] giftsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hairField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string height_categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint inventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] languagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string personnalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.complete_race raceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char sexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.multientity skillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint skinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.template statsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint account {
            get {
                return this.accountField;
            }
            set {
                if ((this.accountField.Equals(value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] aptitudes {
            get {
                return this.aptitudesField;
            }
            set {
                if ((object.ReferenceEquals(this.aptitudesField, value) != true)) {
                    this.aptitudesField = value;
                    this.RaisePropertyChanged("aptitudes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] avatar {
            get {
                return this.avatarField;
            }
            set {
                if ((object.ReferenceEquals(this.avatarField, value) != true)) {
                    this.avatarField = value;
                    this.RaisePropertyChanged("avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string background {
            get {
                return this.backgroundField;
            }
            set {
                if ((object.ReferenceEquals(this.backgroundField, value) != true)) {
                    this.backgroundField = value;
                    this.RaisePropertyChanged("background");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.multiclass classes {
            get {
                return this.classesField;
            }
            set {
                if ((object.ReferenceEquals(this.classesField, value) != true)) {
                    this.classesField = value;
                    this.RaisePropertyChanged("classes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity deity {
            get {
                return this.deityField;
            }
            set {
                if ((object.ReferenceEquals(this.deityField, value) != true)) {
                    this.deityField = value;
                    this.RaisePropertyChanged("deity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eyes {
            get {
                return this.eyesField;
            }
            set {
                if ((object.ReferenceEquals(this.eyesField, value) != true)) {
                    this.eyesField = value;
                    this.RaisePropertyChanged("eyes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] gifts {
            get {
                return this.giftsField;
            }
            set {
                if ((object.ReferenceEquals(this.giftsField, value) != true)) {
                    this.giftsField = value;
                    this.RaisePropertyChanged("gifts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hair {
            get {
                return this.hairField;
            }
            set {
                if ((object.ReferenceEquals(this.hairField, value) != true)) {
                    this.hairField = value;
                    this.RaisePropertyChanged("hair");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string height_category {
            get {
                return this.height_categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.height_categoryField, value) != true)) {
                    this.height_categoryField = value;
                    this.RaisePropertyChanged("height_category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint inventory {
            get {
                return this.inventoryField;
            }
            set {
                if ((this.inventoryField.Equals(value) != true)) {
                    this.inventoryField = value;
                    this.RaisePropertyChanged("inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] languages {
            get {
                return this.languagesField;
            }
            set {
                if ((object.ReferenceEquals(this.languagesField, value) != true)) {
                    this.languagesField = value;
                    this.RaisePropertyChanged("languages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string personnality {
            get {
                return this.personnalityField;
            }
            set {
                if ((object.ReferenceEquals(this.personnalityField, value) != true)) {
                    this.personnalityField = value;
                    this.RaisePropertyChanged("personnality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.complete_race race {
            get {
                return this.raceField;
            }
            set {
                if ((object.ReferenceEquals(this.raceField, value) != true)) {
                    this.raceField = value;
                    this.RaisePropertyChanged("race");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char sex {
            get {
                return this.sexField;
            }
            set {
                if ((this.sexField.Equals(value) != true)) {
                    this.sexField = value;
                    this.RaisePropertyChanged("sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.multientity skills {
            get {
                return this.skillsField;
            }
            set {
                if ((object.ReferenceEquals(this.skillsField, value) != true)) {
                    this.skillsField = value;
                    this.RaisePropertyChanged("skills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint skin {
            get {
                return this.skinField;
            }
            set {
                if ((this.skinField.Equals(value) != true)) {
                    this.skinField = value;
                    this.RaisePropertyChanged("skin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.template stats {
            get {
                return this.statsField;
            }
            set {
                if ((object.ReferenceEquals(this.statsField, value) != true)) {
                    this.statsField = value;
                    this.RaisePropertyChanged("stats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint weight {
            get {
                return this.weightField;
            }
            set {
                if ((this.weightField.Equals(value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="multiclass", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class multiclass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint id_characterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.complete_class>[] level_classField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id_character {
            get {
                return this.id_characterField;
            }
            set {
                if ((this.id_characterField.Equals(value) != true)) {
                    this.id_characterField = value;
                    this.RaisePropertyChanged("id_character");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.complete_class>[] level_class {
            get {
                return this.level_classField;
            }
            set {
                if ((object.ReferenceEquals(this.level_classField, value) != true)) {
                    this.level_classField = value;
                    this.RaisePropertyChanged("level_class");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="short_entity", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class short_entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="complete_race", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class complete_race : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] illustrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] innates_languagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.template templateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] illustration {
            get {
                return this.illustrationField;
            }
            set {
                if ((object.ReferenceEquals(this.illustrationField, value) != true)) {
                    this.illustrationField = value;
                    this.RaisePropertyChanged("illustration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] innates_languages {
            get {
                return this.innates_languagesField;
            }
            set {
                if ((object.ReferenceEquals(this.innates_languagesField, value) != true)) {
                    this.innates_languagesField = value;
                    this.RaisePropertyChanged("innates_languages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.template template {
            get {
                return this.templateField;
            }
            set {
                if ((object.ReferenceEquals(this.templateField, value) != true)) {
                    this.templateField = value;
                    this.RaisePropertyChanged("template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="multientity", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class multientity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.short_entity>[] values_entitiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.short_entity>[] values_entities {
            get {
                return this.values_entitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.values_entitiesField, value) != true)) {
                    this.values_entitiesField = value;
                    this.RaisePropertyChanged("values_entities");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="template", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class template : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.characteristic[] characteristicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.characteristic[] characteristics {
            get {
                return this.characteristicsField;
            }
            set {
                if ((object.ReferenceEquals(this.characteristicsField, value) != true)) {
                    this.characteristicsField = value;
                    this.RaisePropertyChanged("characteristics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="complete_class", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class complete_class : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string health_progressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] illustrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.template templateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string health_progression {
            get {
                return this.health_progressionField;
            }
            set {
                if ((object.ReferenceEquals(this.health_progressionField, value) != true)) {
                    this.health_progressionField = value;
                    this.RaisePropertyChanged("health_progression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] illustration {
            get {
                return this.illustrationField;
            }
            set {
                if ((object.ReferenceEquals(this.illustrationField, value) != true)) {
                    this.illustrationField = value;
                    this.RaisePropertyChanged("illustration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.template template {
            get {
                return this.templateField;
            }
            set {
                if ((object.ReferenceEquals(this.templateField, value) != true)) {
                    this.templateField = value;
                    this.RaisePropertyChanged("template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="characteristic", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class characteristic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string abreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int modifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string abreviation {
            get {
                return this.abreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.abreviationField, value) != true)) {
                    this.abreviationField = value;
                    this.RaisePropertyChanged("abreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int modifier {
            get {
                return this.modifierField;
            }
            set {
                if ((this.modifierField.Equals(value) != true)) {
                    this.modifierField = value;
                    this.RaisePropertyChanged("modifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="short_character", Namespace="http://schemas.datacontract.org/2004/07/DnDService")]
    [System.SerializableAttribute()]
    public partial class short_character : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string class_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint global_levelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint id_accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint id_characterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint race_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string class_name {
            get {
                return this.class_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.class_nameField, value) != true)) {
                    this.class_nameField = value;
                    this.RaisePropertyChanged("class_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint global_level {
            get {
                return this.global_levelField;
            }
            set {
                if ((this.global_levelField.Equals(value) != true)) {
                    this.global_levelField = value;
                    this.RaisePropertyChanged("global_level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id_account {
            get {
                return this.id_accountField;
            }
            set {
                if ((this.id_accountField.Equals(value) != true)) {
                    this.id_accountField = value;
                    this.RaisePropertyChanged("id_account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id_character {
            get {
                return this.id_characterField;
            }
            set {
                if ((this.id_characterField.Equals(value) != true)) {
                    this.id_characterField = value;
                    this.RaisePropertyChanged("id_character");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint race_name {
            get {
                return this.race_nameField;
            }
            set {
                if ((this.race_nameField.Equals(value) != true)) {
                    this.race_nameField = value;
                    this.RaisePropertyChanged("race_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountConnection", ReplyAction="http://tempuri.org/IService1/AccountConnectionResponse")]
        uint AccountConnection(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountConnection", ReplyAction="http://tempuri.org/IService1/AccountConnectionResponse")]
        System.Threading.Tasks.Task<uint> AccountConnectionAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountCreate", ReplyAction="http://tempuri.org/IService1/AccountCreateResponse")]
        uint AccountCreate(string user, string pass, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountCreate", ReplyAction="http://tempuri.org/IService1/AccountCreateResponse")]
        System.Threading.Tasks.Task<uint> AccountCreateAsync(string user, string pass, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountDelete", ReplyAction="http://tempuri.org/IService1/AccountDeleteResponse")]
        bool AccountDelete(int account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountDelete", ReplyAction="http://tempuri.org/IService1/AccountDeleteResponse")]
        System.Threading.Tasks.Task<bool> AccountDeleteAsync(int account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterCreate", ReplyAction="http://tempuri.org/IService1/CharacterCreateResponse")]
        int CharacterCreate(DnDServicePlayer.ServiceReference1.character player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterCreate", ReplyAction="http://tempuri.org/IService1/CharacterCreateResponse")]
        System.Threading.Tasks.Task<int> CharacterCreateAsync(DnDServicePlayer.ServiceReference1.character player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterDelete", ReplyAction="http://tempuri.org/IService1/CharacterDeleteResponse")]
        bool CharacterDelete(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterDelete", ReplyAction="http://tempuri.org/IService1/CharacterDeleteResponse")]
        System.Threading.Tasks.Task<bool> CharacterDeleteAsync(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacter", ReplyAction="http://tempuri.org/IService1/GetCharacterResponse")]
        DnDServicePlayer.ServiceReference1.character GetCharacter(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacter", ReplyAction="http://tempuri.org/IService1/GetCharacterResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.character> GetCharacterAsync(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacters", ReplyAction="http://tempuri.org/IService1/GetCharactersResponse")]
        DnDServicePlayer.ServiceReference1.short_character[] GetCharacters(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacters", ReplyAction="http://tempuri.org/IService1/GetCharactersResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_character[]> GetCharactersAsync(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceShortList", ReplyAction="http://tempuri.org/IService1/GetRaceShortListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetRaceShortList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceShortList", ReplyAction="http://tempuri.org/IService1/GetRaceShortListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceShortListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassShortList", ReplyAction="http://tempuri.org/IService1/GetClassShortListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetClassShortList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassShortList", ReplyAction="http://tempuri.org/IService1/GetClassShortListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetClassShortListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicShortList", ReplyAction="http://tempuri.org/IService1/GetCharacteristicShortListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetCharacteristicShortList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicShortList", ReplyAction="http://tempuri.org/IService1/GetCharacteristicShortListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacteristicShortListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTemplate", ReplyAction="http://tempuri.org/IService1/GetTemplateResponse")]
        DnDServicePlayer.ServiceReference1.template GetTemplate(uint id_template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTemplate", ReplyAction="http://tempuri.org/IService1/GetTemplateResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetTemplateAsync(uint id_template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLanguageList", ReplyAction="http://tempuri.org/IService1/GetLanguageListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetLanguageList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLanguageList", ReplyAction="http://tempuri.org/IService1/GetLanguageListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetLanguageListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceLanguage", ReplyAction="http://tempuri.org/IService1/GetRaceLanguageResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetRaceLanguage(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceLanguage", ReplyAction="http://tempuri.org/IService1/GetRaceLanguageResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceLanguageAsync(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterLanguage", ReplyAction="http://tempuri.org/IService1/GetCharacterLanguageResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterLanguage(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterLanguage", ReplyAction="http://tempuri.org/IService1/GetCharacterLanguageResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterLanguageAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClass", ReplyAction="http://tempuri.org/IService1/GetClassResponse")]
        DnDServicePlayer.ServiceReference1.complete_class GetClass(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClass", ReplyAction="http://tempuri.org/IService1/GetClassResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_class> GetClassAsync(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRace", ReplyAction="http://tempuri.org/IService1/GetRaceResponse")]
        DnDServicePlayer.ServiceReference1.complete_race GetRace(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRace", ReplyAction="http://tempuri.org/IService1/GetRaceResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_race> GetRaceAsync(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristics", ReplyAction="http://tempuri.org/IService1/GetCharacteristicsResponse")]
        DnDServicePlayer.ServiceReference1.characteristic[] GetCharacteristics(uint id_template, uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristics", ReplyAction="http://tempuri.org/IService1/GetCharacteristicsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetCharacteristicsAsync(uint id_template, uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMulticlass", ReplyAction="http://tempuri.org/IService1/GetMulticlassResponse")]
        DnDServicePlayer.ServiceReference1.multiclass GetMulticlass(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMulticlass", ReplyAction="http://tempuri.org/IService1/GetMulticlassResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multiclass> GetMulticlassAsync(uint id_character);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : DnDServicePlayer.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DnDServicePlayer.ServiceReference1.IService1>, DnDServicePlayer.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public uint AccountConnection(string user, string pass) {
            return base.Channel.AccountConnection(user, pass);
        }
        
        public System.Threading.Tasks.Task<uint> AccountConnectionAsync(string user, string pass) {
            return base.Channel.AccountConnectionAsync(user, pass);
        }
        
        public uint AccountCreate(string user, string pass, string mail) {
            return base.Channel.AccountCreate(user, pass, mail);
        }
        
        public System.Threading.Tasks.Task<uint> AccountCreateAsync(string user, string pass, string mail) {
            return base.Channel.AccountCreateAsync(user, pass, mail);
        }
        
        public bool AccountDelete(int account_id) {
            return base.Channel.AccountDelete(account_id);
        }
        
        public System.Threading.Tasks.Task<bool> AccountDeleteAsync(int account_id) {
            return base.Channel.AccountDeleteAsync(account_id);
        }
        
        public int CharacterCreate(DnDServicePlayer.ServiceReference1.character player) {
            return base.Channel.CharacterCreate(player);
        }
        
        public System.Threading.Tasks.Task<int> CharacterCreateAsync(DnDServicePlayer.ServiceReference1.character player) {
            return base.Channel.CharacterCreateAsync(player);
        }
        
        public bool CharacterDelete(uint character_id) {
            return base.Channel.CharacterDelete(character_id);
        }
        
        public System.Threading.Tasks.Task<bool> CharacterDeleteAsync(uint character_id) {
            return base.Channel.CharacterDeleteAsync(character_id);
        }
        
        public DnDServicePlayer.ServiceReference1.character GetCharacter(uint character_id) {
            return base.Channel.GetCharacter(character_id);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.character> GetCharacterAsync(uint character_id) {
            return base.Channel.GetCharacterAsync(character_id);
        }
        
        public DnDServicePlayer.ServiceReference1.short_character[] GetCharacters(uint character_id) {
            return base.Channel.GetCharacters(character_id);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_character[]> GetCharactersAsync(uint character_id) {
            return base.Channel.GetCharactersAsync(character_id);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetRaceShortList() {
            return base.Channel.GetRaceShortList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceShortListAsync() {
            return base.Channel.GetRaceShortListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetClassShortList() {
            return base.Channel.GetClassShortList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetClassShortListAsync() {
            return base.Channel.GetClassShortListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetCharacteristicShortList() {
            return base.Channel.GetCharacteristicShortList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacteristicShortListAsync() {
            return base.Channel.GetCharacteristicShortListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.template GetTemplate(uint id_template) {
            return base.Channel.GetTemplate(id_template);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetTemplateAsync(uint id_template) {
            return base.Channel.GetTemplateAsync(id_template);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetLanguageList() {
            return base.Channel.GetLanguageList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetLanguageListAsync() {
            return base.Channel.GetLanguageListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetRaceLanguage(uint id_race) {
            return base.Channel.GetRaceLanguage(id_race);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceLanguageAsync(uint id_race) {
            return base.Channel.GetRaceLanguageAsync(id_race);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterLanguage(uint id_character) {
            return base.Channel.GetCharacterLanguage(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterLanguageAsync(uint id_character) {
            return base.Channel.GetCharacterLanguageAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.complete_class GetClass(uint id_class) {
            return base.Channel.GetClass(id_class);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_class> GetClassAsync(uint id_class) {
            return base.Channel.GetClassAsync(id_class);
        }
        
        public DnDServicePlayer.ServiceReference1.complete_race GetRace(uint id_race) {
            return base.Channel.GetRace(id_race);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_race> GetRaceAsync(uint id_race) {
            return base.Channel.GetRaceAsync(id_race);
        }
        
        public DnDServicePlayer.ServiceReference1.characteristic[] GetCharacteristics(uint id_template, uint id_type) {
            return base.Channel.GetCharacteristics(id_template, id_type);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetCharacteristicsAsync(uint id_template, uint id_type) {
            return base.Channel.GetCharacteristicsAsync(id_template, id_type);
        }
        
        public DnDServicePlayer.ServiceReference1.multiclass GetMulticlass(uint id_character) {
            return base.Channel.GetMulticlass(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multiclass> GetMulticlassAsync(uint id_character) {
            return base.Channel.GetMulticlassAsync(id_character);
        }
    }
}
