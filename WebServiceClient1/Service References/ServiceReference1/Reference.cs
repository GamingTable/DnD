//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DnDServicePlayer.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="character", Namespace="http://schemas.datacontract.org/2004/07/DnDService")]
    [System.SerializableAttribute()]
    public partial class character : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.aptitude[] aptitudesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] avatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string backgroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.multientity classesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity deityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eyesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] giftsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hairField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.inventory inventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] languagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string personnalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity raceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char sexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.multiskill skillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string skinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.spellbook spells_in_mindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.characteristic[] statsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint account {
            get {
                return this.accountField;
            }
            set {
                if ((this.accountField.Equals(value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> age {
            get {
                return this.ageField;
            }
            set {
                if ((object.ReferenceEquals(this.ageField, value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.aptitude[] aptitudes {
            get {
                return this.aptitudesField;
            }
            set {
                if ((object.ReferenceEquals(this.aptitudesField, value) != true)) {
                    this.aptitudesField = value;
                    this.RaisePropertyChanged("aptitudes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] avatar {
            get {
                return this.avatarField;
            }
            set {
                if ((object.ReferenceEquals(this.avatarField, value) != true)) {
                    this.avatarField = value;
                    this.RaisePropertyChanged("avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string background {
            get {
                return this.backgroundField;
            }
            set {
                if ((object.ReferenceEquals(this.backgroundField, value) != true)) {
                    this.backgroundField = value;
                    this.RaisePropertyChanged("background");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.multientity classes {
            get {
                return this.classesField;
            }
            set {
                if ((object.ReferenceEquals(this.classesField, value) != true)) {
                    this.classesField = value;
                    this.RaisePropertyChanged("classes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity deity {
            get {
                return this.deityField;
            }
            set {
                if ((object.ReferenceEquals(this.deityField, value) != true)) {
                    this.deityField = value;
                    this.RaisePropertyChanged("deity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eyes {
            get {
                return this.eyesField;
            }
            set {
                if ((object.ReferenceEquals(this.eyesField, value) != true)) {
                    this.eyesField = value;
                    this.RaisePropertyChanged("eyes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] gifts {
            get {
                return this.giftsField;
            }
            set {
                if ((object.ReferenceEquals(this.giftsField, value) != true)) {
                    this.giftsField = value;
                    this.RaisePropertyChanged("gifts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hair {
            get {
                return this.hairField;
            }
            set {
                if ((object.ReferenceEquals(this.hairField, value) != true)) {
                    this.hairField = value;
                    this.RaisePropertyChanged("hair");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> height {
            get {
                return this.heightField;
            }
            set {
                if ((object.ReferenceEquals(this.heightField, value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.inventory inventory {
            get {
                return this.inventoryField;
            }
            set {
                if ((object.ReferenceEquals(this.inventoryField, value) != true)) {
                    this.inventoryField = value;
                    this.RaisePropertyChanged("inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] languages {
            get {
                return this.languagesField;
            }
            set {
                if ((object.ReferenceEquals(this.languagesField, value) != true)) {
                    this.languagesField = value;
                    this.RaisePropertyChanged("languages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string personnality {
            get {
                return this.personnalityField;
            }
            set {
                if ((object.ReferenceEquals(this.personnalityField, value) != true)) {
                    this.personnalityField = value;
                    this.RaisePropertyChanged("personnality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity race {
            get {
                return this.raceField;
            }
            set {
                if ((object.ReferenceEquals(this.raceField, value) != true)) {
                    this.raceField = value;
                    this.RaisePropertyChanged("race");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char sex {
            get {
                return this.sexField;
            }
            set {
                if ((this.sexField.Equals(value) != true)) {
                    this.sexField = value;
                    this.RaisePropertyChanged("sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.multiskill skills {
            get {
                return this.skillsField;
            }
            set {
                if ((object.ReferenceEquals(this.skillsField, value) != true)) {
                    this.skillsField = value;
                    this.RaisePropertyChanged("skills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string skin {
            get {
                return this.skinField;
            }
            set {
                if ((object.ReferenceEquals(this.skinField, value) != true)) {
                    this.skinField = value;
                    this.RaisePropertyChanged("skin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.spellbook spells_in_mind {
            get {
                return this.spells_in_mindField;
            }
            set {
                if ((object.ReferenceEquals(this.spells_in_mindField, value) != true)) {
                    this.spells_in_mindField = value;
                    this.RaisePropertyChanged("spells_in_mind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.characteristic[] stats {
            get {
                return this.statsField;
            }
            set {
                if ((object.ReferenceEquals(this.statsField, value) != true)) {
                    this.statsField = value;
                    this.RaisePropertyChanged("stats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> weight {
            get {
                return this.weightField;
            }
            set {
                if ((object.ReferenceEquals(this.weightField, value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="category", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int minField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int max {
            get {
                return this.maxField;
            }
            set {
                if ((this.maxField.Equals(value) != true)) {
                    this.maxField = value;
                    this.RaisePropertyChanged("max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int min {
            get {
                return this.minField;
            }
            set {
                if ((this.minField.Equals(value) != true)) {
                    this.minField = value;
                    this.RaisePropertyChanged("min");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="multientity", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class multientity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.short_entity>[] values_entitiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.short_entity>[] values_entities {
            get {
                return this.values_entitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.values_entitiesField, value) != true)) {
                    this.values_entitiesField = value;
                    this.RaisePropertyChanged("values_entities");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="short_entity", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class short_entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="inventory", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class inventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint characterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.multiitem itemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.multimoney purseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.spellbook[] spellbooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint character {
            get {
                return this.characterField;
            }
            set {
                if ((this.characterField.Equals(value) != true)) {
                    this.characterField = value;
                    this.RaisePropertyChanged("character");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.multiitem items {
            get {
                return this.itemsField;
            }
            set {
                if ((object.ReferenceEquals(this.itemsField, value) != true)) {
                    this.itemsField = value;
                    this.RaisePropertyChanged("items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.multimoney purse {
            get {
                return this.purseField;
            }
            set {
                if ((object.ReferenceEquals(this.purseField, value) != true)) {
                    this.purseField = value;
                    this.RaisePropertyChanged("purse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.spellbook[] spellbooks {
            get {
                return this.spellbooksField;
            }
            set {
                if ((object.ReferenceEquals(this.spellbooksField, value) != true)) {
                    this.spellbooksField = value;
                    this.RaisePropertyChanged("spellbooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="multiskill", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class multiskill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint id_characterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.skill>[] md_skillField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id_character {
            get {
                return this.id_characterField;
            }
            set {
                if ((this.id_characterField.Equals(value) != true)) {
                    this.id_characterField = value;
                    this.RaisePropertyChanged("id_character");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.skill>[] md_skill {
            get {
                return this.md_skillField;
            }
            set {
                if ((object.ReferenceEquals(this.md_skillField, value) != true)) {
                    this.md_skillField = value;
                    this.RaisePropertyChanged("md_skill");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="spellbook", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class spellbook : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.spell[] spellsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.spell[] spells {
            get {
                return this.spellsField;
            }
            set {
                if ((object.ReferenceEquals(this.spellsField, value) != true)) {
                    this.spellsField = value;
                    this.RaisePropertyChanged("spells");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="aptitude", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class aptitude : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.complete_class classeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.complete_class classe {
            get {
                return this.classeField;
            }
            set {
                if ((object.ReferenceEquals(this.classeField, value) != true)) {
                    this.classeField = value;
                    this.RaisePropertyChanged("classe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="characteristic", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class characteristic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string abreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int modifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string abreviation {
            get {
                return this.abreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.abreviationField, value) != true)) {
                    this.abreviationField = value;
                    this.RaisePropertyChanged("abreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int modifier {
            get {
                return this.modifierField;
            }
            set {
                if ((this.modifierField.Equals(value) != true)) {
                    this.modifierField = value;
                    this.RaisePropertyChanged("modifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="complete_class", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class complete_class : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string health_progressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] illustrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool magicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.spell[] spellsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string health_progression {
            get {
                return this.health_progressionField;
            }
            set {
                if ((object.ReferenceEquals(this.health_progressionField, value) != true)) {
                    this.health_progressionField = value;
                    this.RaisePropertyChanged("health_progression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] illustration {
            get {
                return this.illustrationField;
            }
            set {
                if ((object.ReferenceEquals(this.illustrationField, value) != true)) {
                    this.illustrationField = value;
                    this.RaisePropertyChanged("illustration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool magical {
            get {
                return this.magicalField;
            }
            set {
                if ((this.magicalField.Equals(value) != true)) {
                    this.magicalField = value;
                    this.RaisePropertyChanged("magical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.spell[] spells {
            get {
                return this.spellsField;
            }
            set {
                if ((object.ReferenceEquals(this.spellsField, value) != true)) {
                    this.spellsField = value;
                    this.RaisePropertyChanged("spells");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="spell", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class spell : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string casting_timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string componentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string durationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string incantationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool magic_resistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.template[] modifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.characteristic saving_throwField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.complete_class> spellLevel_classField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint targetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.wizardry wizardryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string casting_time {
            get {
                return this.casting_timeField;
            }
            set {
                if ((object.ReferenceEquals(this.casting_timeField, value) != true)) {
                    this.casting_timeField = value;
                    this.RaisePropertyChanged("casting_time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string component {
            get {
                return this.componentField;
            }
            set {
                if ((object.ReferenceEquals(this.componentField, value) != true)) {
                    this.componentField = value;
                    this.RaisePropertyChanged("component");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string duration {
            get {
                return this.durationField;
            }
            set {
                if ((object.ReferenceEquals(this.durationField, value) != true)) {
                    this.durationField = value;
                    this.RaisePropertyChanged("duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string incantation {
            get {
                return this.incantationField;
            }
            set {
                if ((object.ReferenceEquals(this.incantationField, value) != true)) {
                    this.incantationField = value;
                    this.RaisePropertyChanged("incantation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool magic_resist {
            get {
                return this.magic_resistField;
            }
            set {
                if ((this.magic_resistField.Equals(value) != true)) {
                    this.magic_resistField = value;
                    this.RaisePropertyChanged("magic_resist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.template[] modifiers {
            get {
                return this.modifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.modifiersField, value) != true)) {
                    this.modifiersField = value;
                    this.RaisePropertyChanged("modifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string range {
            get {
                return this.rangeField;
            }
            set {
                if ((object.ReferenceEquals(this.rangeField, value) != true)) {
                    this.rangeField = value;
                    this.RaisePropertyChanged("range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.characteristic saving_throw {
            get {
                return this.saving_throwField;
            }
            set {
                if ((object.ReferenceEquals(this.saving_throwField, value) != true)) {
                    this.saving_throwField = value;
                    this.RaisePropertyChanged("saving_throw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.complete_class> spellLevel_class {
            get {
                return this.spellLevel_classField;
            }
            set {
                if ((object.ReferenceEquals(this.spellLevel_classField, value) != true)) {
                    this.spellLevel_classField = value;
                    this.RaisePropertyChanged("spellLevel_class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint target {
            get {
                return this.targetField;
            }
            set {
                if ((this.targetField.Equals(value) != true)) {
                    this.targetField = value;
                    this.RaisePropertyChanged("target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.wizardry wizardry {
            get {
                return this.wizardryField;
            }
            set {
                if ((object.ReferenceEquals(this.wizardryField, value) != true)) {
                    this.wizardryField = value;
                    this.RaisePropertyChanged("wizardry");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="wizardry", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class wizardry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string branchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool profane_divineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string registerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string schoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string branch {
            get {
                return this.branchField;
            }
            set {
                if ((object.ReferenceEquals(this.branchField, value) != true)) {
                    this.branchField = value;
                    this.RaisePropertyChanged("branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool profane_divine {
            get {
                return this.profane_divineField;
            }
            set {
                if ((this.profane_divineField.Equals(value) != true)) {
                    this.profane_divineField = value;
                    this.RaisePropertyChanged("profane_divine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string register {
            get {
                return this.registerField;
            }
            set {
                if ((object.ReferenceEquals(this.registerField, value) != true)) {
                    this.registerField = value;
                    this.RaisePropertyChanged("register");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string school {
            get {
                return this.schoolField;
            }
            set {
                if ((object.ReferenceEquals(this.schoolField, value) != true)) {
                    this.schoolField = value;
                    this.RaisePropertyChanged("school");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="template", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class template : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.characteristic[] characteristicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.characteristic[] characteristics {
            get {
                return this.characteristicsField;
            }
            set {
                if ((object.ReferenceEquals(this.characteristicsField, value) != true)) {
                    this.characteristicsField = value;
                    this.RaisePropertyChanged("characteristics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="multiitem", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class multiitem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint inventory_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.item>[] quantity_itemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint inventory_id {
            get {
                return this.inventory_idField;
            }
            set {
                if ((this.inventory_idField.Equals(value) != true)) {
                    this.inventory_idField = value;
                    this.RaisePropertyChanged("inventory_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.item>[] quantity_item {
            get {
                return this.quantity_itemField;
            }
            set {
                if ((object.ReferenceEquals(this.quantity_itemField, value) != true)) {
                    this.quantity_itemField = value;
                    this.RaisePropertyChanged("quantity_item");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="multimoney", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class multimoney : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint inventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.money>[] pieces_moneyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint inventory {
            get {
                return this.inventoryField;
            }
            set {
                if ((this.inventoryField.Equals(value) != true)) {
                    this.inventoryField = value;
                    this.RaisePropertyChanged("inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.money>[] pieces_money {
            get {
                return this.pieces_moneyField;
            }
            set {
                if ((object.ReferenceEquals(this.pieces_moneyField, value) != true)) {
                    this.pieces_moneyField = value;
                    this.RaisePropertyChanged("pieces_money");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="item", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.attack attackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.item_category categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool equippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity languageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.spell spellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.template templateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.attack attack {
            get {
                return this.attackField;
            }
            set {
                if ((object.ReferenceEquals(this.attackField, value) != true)) {
                    this.attackField = value;
                    this.RaisePropertyChanged("attack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.item_category category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool equipped {
            get {
                return this.equippedField;
            }
            set {
                if ((this.equippedField.Equals(value) != true)) {
                    this.equippedField = value;
                    this.RaisePropertyChanged("equipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> height {
            get {
                return this.heightField;
            }
            set {
                if ((object.ReferenceEquals(this.heightField, value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity language {
            get {
                return this.languageField;
            }
            set {
                if ((object.ReferenceEquals(this.languageField, value) != true)) {
                    this.languageField = value;
                    this.RaisePropertyChanged("language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.spell spell {
            get {
                return this.spellField;
            }
            set {
                if ((object.ReferenceEquals(this.spellField, value) != true)) {
                    this.spellField = value;
                    this.RaisePropertyChanged("spell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.template template {
            get {
                return this.templateField;
            }
            set {
                if ((object.ReferenceEquals(this.templateField, value) != true)) {
                    this.templateField = value;
                    this.RaisePropertyChanged("template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> weight {
            get {
                return this.weightField;
            }
            set {
                if ((object.ReferenceEquals(this.weightField, value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="attack", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class attack : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ammoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string criticField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string damageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint rangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint ammo {
            get {
                return this.ammoField;
            }
            set {
                if ((this.ammoField.Equals(value) != true)) {
                    this.ammoField = value;
                    this.RaisePropertyChanged("ammo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bonus {
            get {
                return this.bonusField;
            }
            set {
                if ((object.ReferenceEquals(this.bonusField, value) != true)) {
                    this.bonusField = value;
                    this.RaisePropertyChanged("bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string critic {
            get {
                return this.criticField;
            }
            set {
                if ((object.ReferenceEquals(this.criticField, value) != true)) {
                    this.criticField = value;
                    this.RaisePropertyChanged("critic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string damage {
            get {
                return this.damageField;
            }
            set {
                if ((object.ReferenceEquals(this.damageField, value) != true)) {
                    this.damageField = value;
                    this.RaisePropertyChanged("damage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint range {
            get {
                return this.rangeField;
            }
            set {
                if ((this.rangeField.Equals(value) != true)) {
                    this.rangeField = value;
                    this.RaisePropertyChanged("range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="item_category", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class item_category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.item_category parentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.item_category parent {
            get {
                return this.parentField;
            }
            set {
                if ((object.ReferenceEquals(this.parentField, value) != true)) {
                    this.parentField = value;
                    this.RaisePropertyChanged("parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="money", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class money : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float one_to_goldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float one_to_gold {
            get {
                return this.one_to_goldField;
            }
            set {
                if ((this.one_to_goldField.Equals(value) != true)) {
                    this.one_to_goldField = value;
                    this.RaisePropertyChanged("one_to_gold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="skill", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class skill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] classesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] conditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool innateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.characteristic key_abilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.template modifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool teachableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] classes {
            get {
                return this.classesField;
            }
            set {
                if ((object.ReferenceEquals(this.classesField, value) != true)) {
                    this.classesField = value;
                    this.RaisePropertyChanged("classes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] conditions {
            get {
                return this.conditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.conditionsField, value) != true)) {
                    this.conditionsField = value;
                    this.RaisePropertyChanged("conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool innate {
            get {
                return this.innateField;
            }
            set {
                if ((this.innateField.Equals(value) != true)) {
                    this.innateField = value;
                    this.RaisePropertyChanged("innate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.characteristic key_ability {
            get {
                return this.key_abilityField;
            }
            set {
                if ((object.ReferenceEquals(this.key_abilityField, value) != true)) {
                    this.key_abilityField = value;
                    this.RaisePropertyChanged("key_ability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.template modifiers {
            get {
                return this.modifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.modifiersField, value) != true)) {
                    this.modifiersField = value;
                    this.RaisePropertyChanged("modifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool teachable {
            get {
                return this.teachableField;
            }
            set {
                if ((this.teachableField.Equals(value) != true)) {
                    this.teachableField = value;
                    this.RaisePropertyChanged("teachable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="short_character", Namespace="http://schemas.datacontract.org/2004/07/DnDService")]
    [System.SerializableAttribute()]
    public partial class short_character : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] avatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string class_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint global_levelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string race_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint account {
            get {
                return this.accountField;
            }
            set {
                if ((this.accountField.Equals(value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] avatar {
            get {
                return this.avatarField;
            }
            set {
                if ((object.ReferenceEquals(this.avatarField, value) != true)) {
                    this.avatarField = value;
                    this.RaisePropertyChanged("avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string class_name {
            get {
                return this.class_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.class_nameField, value) != true)) {
                    this.class_nameField = value;
                    this.RaisePropertyChanged("class_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint global_level {
            get {
                return this.global_levelField;
            }
            set {
                if ((this.global_levelField.Equals(value) != true)) {
                    this.global_levelField = value;
                    this.RaisePropertyChanged("global_level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string race_name {
            get {
                return this.race_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.race_nameField, value) != true)) {
                    this.race_nameField = value;
                    this.RaisePropertyChanged("race_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="complete_race", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class complete_race : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] effectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] illustrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.short_entity[] innates_languagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DnDServicePlayer.ServiceReference1.template templateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] effects {
            get {
                return this.effectsField;
            }
            set {
                if ((object.ReferenceEquals(this.effectsField, value) != true)) {
                    this.effectsField = value;
                    this.RaisePropertyChanged("effects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] illustration {
            get {
                return this.illustrationField;
            }
            set {
                if ((object.ReferenceEquals(this.illustrationField, value) != true)) {
                    this.illustrationField = value;
                    this.RaisePropertyChanged("illustration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.short_entity[] innates_languages {
            get {
                return this.innates_languagesField;
            }
            set {
                if ((object.ReferenceEquals(this.innates_languagesField, value) != true)) {
                    this.innates_languagesField = value;
                    this.RaisePropertyChanged("innates_languages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DnDServicePlayer.ServiceReference1.template template {
            get {
                return this.templateField;
            }
            set {
                if ((object.ReferenceEquals(this.templateField, value) != true)) {
                    this.templateField = value;
                    this.RaisePropertyChanged("template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="multiclass", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class multiclass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint id_characterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<uint, DnDServicePlayer.ServiceReference1.complete_class, DnDServicePlayer.ServiceReference1.template>[] level_classField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id_character {
            get {
                return this.id_characterField;
            }
            set {
                if ((this.id_characterField.Equals(value) != true)) {
                    this.id_characterField = value;
                    this.RaisePropertyChanged("id_character");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.complete_class, DnDServicePlayer.ServiceReference1.template>[] level_class {
            get {
                return this.level_classField;
            }
            set {
                if ((object.ReferenceEquals(this.level_classField, value) != true)) {
                    this.level_classField = value;
                    this.RaisePropertyChanged("level_class");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gift", Namespace="http://schemas.datacontract.org/2004/07/DnDService.DataStructures")]
    [System.SerializableAttribute()]
    public partial class gift : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string advantagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string conditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string specialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string advantages {
            get {
                return this.advantagesField;
            }
            set {
                if ((object.ReferenceEquals(this.advantagesField, value) != true)) {
                    this.advantagesField = value;
                    this.RaisePropertyChanged("advantages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string conditions {
            get {
                return this.conditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.conditionsField, value) != true)) {
                    this.conditionsField = value;
                    this.RaisePropertyChanged("conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string specials {
            get {
                return this.specialsField;
            }
            set {
                if ((object.ReferenceEquals(this.specialsField, value) != true)) {
                    this.specialsField = value;
                    this.RaisePropertyChanged("specials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountConnection", ReplyAction="http://tempuri.org/IService1/AccountConnectionResponse")]
        uint AccountConnection(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountConnection", ReplyAction="http://tempuri.org/IService1/AccountConnectionResponse")]
        System.Threading.Tasks.Task<uint> AccountConnectionAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountCreate", ReplyAction="http://tempuri.org/IService1/AccountCreateResponse")]
        uint AccountCreate(string user, string pass, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountCreate", ReplyAction="http://tempuri.org/IService1/AccountCreateResponse")]
        System.Threading.Tasks.Task<uint> AccountCreateAsync(string user, string pass, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountDelete", ReplyAction="http://tempuri.org/IService1/AccountDeleteResponse")]
        bool AccountDelete(int account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountDelete", ReplyAction="http://tempuri.org/IService1/AccountDeleteResponse")]
        System.Threading.Tasks.Task<bool> AccountDeleteAsync(int account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountName", ReplyAction="http://tempuri.org/IService1/GetAccountNameResponse")]
        string GetAccountName(uint account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountName", ReplyAction="http://tempuri.org/IService1/GetAccountNameResponse")]
        System.Threading.Tasks.Task<string> GetAccountNameAsync(uint account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterCreate", ReplyAction="http://tempuri.org/IService1/CharacterCreateResponse")]
        int CharacterCreate(DnDServicePlayer.ServiceReference1.character player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterCreate", ReplyAction="http://tempuri.org/IService1/CharacterCreateResponse")]
        System.Threading.Tasks.Task<int> CharacterCreateAsync(DnDServicePlayer.ServiceReference1.character player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterDelete", ReplyAction="http://tempuri.org/IService1/CharacterDeleteResponse")]
        bool CharacterDelete(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterDelete", ReplyAction="http://tempuri.org/IService1/CharacterDeleteResponse")]
        System.Threading.Tasks.Task<bool> CharacterDeleteAsync(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterUpdate", ReplyAction="http://tempuri.org/IService1/CharacterUpdateResponse")]
        bool CharacterUpdate(DnDServicePlayer.ServiceReference1.character player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CharacterUpdate", ReplyAction="http://tempuri.org/IService1/CharacterUpdateResponse")]
        System.Threading.Tasks.Task<bool> CharacterUpdateAsync(DnDServicePlayer.ServiceReference1.character player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacter", ReplyAction="http://tempuri.org/IService1/GetCharacterResponse")]
        DnDServicePlayer.ServiceReference1.character GetCharacter(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacter", ReplyAction="http://tempuri.org/IService1/GetCharacterResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.character> GetCharacterAsync(uint character_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacters", ReplyAction="http://tempuri.org/IService1/GetCharactersResponse")]
        DnDServicePlayer.ServiceReference1.short_character[] GetCharacters(uint id_account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacters", ReplyAction="http://tempuri.org/IService1/GetCharactersResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_character[]> GetCharactersAsync(uint id_account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceShortList", ReplyAction="http://tempuri.org/IService1/GetRaceShortListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetRaceShortList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceShortList", ReplyAction="http://tempuri.org/IService1/GetRaceShortListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceShortListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassShortList", ReplyAction="http://tempuri.org/IService1/GetClassShortListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetClassShortList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassShortList", ReplyAction="http://tempuri.org/IService1/GetClassShortListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetClassShortListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShortClass", ReplyAction="http://tempuri.org/IService1/GetShortClassResponse")]
        DnDServicePlayer.ServiceReference1.short_entity GetShortClass(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShortClass", ReplyAction="http://tempuri.org/IService1/GetShortClassResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetShortClassAsync(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShortRace", ReplyAction="http://tempuri.org/IService1/GetShortRaceResponse")]
        DnDServicePlayer.ServiceReference1.short_entity GetShortRace(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShortRace", ReplyAction="http://tempuri.org/IService1/GetShortRaceResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetShortRaceAsync(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicShortList", ReplyAction="http://tempuri.org/IService1/GetCharacteristicShortListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetCharacteristicShortList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicShortList", ReplyAction="http://tempuri.org/IService1/GetCharacteristicShortListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacteristicShortListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTemplate", ReplyAction="http://tempuri.org/IService1/GetTemplateResponse")]
        DnDServicePlayer.ServiceReference1.template GetTemplate(uint id_template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTemplate", ReplyAction="http://tempuri.org/IService1/GetTemplateResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetTemplateAsync(uint id_template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDefaultTemplate", ReplyAction="http://tempuri.org/IService1/GetDefaultTemplateResponse")]
        DnDServicePlayer.ServiceReference1.template GetDefaultTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDefaultTemplate", ReplyAction="http://tempuri.org/IService1/GetDefaultTemplateResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetDefaultTemplateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLanguageList", ReplyAction="http://tempuri.org/IService1/GetLanguageListResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetLanguageList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLanguageList", ReplyAction="http://tempuri.org/IService1/GetLanguageListResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetLanguageListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceLanguage", ReplyAction="http://tempuri.org/IService1/GetRaceLanguageResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetRaceLanguage(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceLanguage", ReplyAction="http://tempuri.org/IService1/GetRaceLanguageResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceLanguageAsync(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterLanguage", ReplyAction="http://tempuri.org/IService1/GetCharacterLanguageResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterLanguage(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterLanguage", ReplyAction="http://tempuri.org/IService1/GetCharacterLanguageResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterLanguageAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClass", ReplyAction="http://tempuri.org/IService1/GetClassResponse")]
        DnDServicePlayer.ServiceReference1.complete_class GetClass(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClass", ReplyAction="http://tempuri.org/IService1/GetClassResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_class> GetClassAsync(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRace", ReplyAction="http://tempuri.org/IService1/GetRaceResponse")]
        DnDServicePlayer.ServiceReference1.complete_race GetRace(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRace", ReplyAction="http://tempuri.org/IService1/GetRaceResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_race> GetRaceAsync(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTemplateCharacteristics", ReplyAction="http://tempuri.org/IService1/GetTemplateCharacteristicsResponse")]
        DnDServicePlayer.ServiceReference1.characteristic[] GetTemplateCharacteristics(uint id_template, uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTemplateCharacteristics", ReplyAction="http://tempuri.org/IService1/GetTemplateCharacteristicsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetTemplateCharacteristicsAsync(uint id_template, uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterCharacteristics", ReplyAction="http://tempuri.org/IService1/GetCharacterCharacteristicsResponse")]
        DnDServicePlayer.ServiceReference1.characteristic[] GetCharacterCharacteristics(uint id_character, uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterCharacteristics", ReplyAction="http://tempuri.org/IService1/GetCharacterCharacteristicsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetCharacterCharacteristicsAsync(uint id_character, uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicType", ReplyAction="http://tempuri.org/IService1/GetCharacteristicTypeResponse")]
        DnDServicePlayer.ServiceReference1.short_entity GetCharacteristicType(uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicType", ReplyAction="http://tempuri.org/IService1/GetCharacteristicTypeResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetCharacteristicTypeAsync(uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicTypes", ReplyAction="http://tempuri.org/IService1/GetCharacteristicTypesResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetCharacteristicTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristicTypes", ReplyAction="http://tempuri.org/IService1/GetCharacteristicTypesResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacteristicTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristic", ReplyAction="http://tempuri.org/IService1/GetCharacteristicResponse")]
        DnDServicePlayer.ServiceReference1.characteristic GetCharacteristic(uint id_characteristic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristic", ReplyAction="http://tempuri.org/IService1/GetCharacteristicResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic> GetCharacteristicAsync(uint id_characteristic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristics", ReplyAction="http://tempuri.org/IService1/GetCharacteristicsResponse")]
        DnDServicePlayer.ServiceReference1.characteristic[] GetCharacteristics(uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacteristics", ReplyAction="http://tempuri.org/IService1/GetCharacteristicsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetCharacteristicsAsync(uint id_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAptitude", ReplyAction="http://tempuri.org/IService1/GetAptitudeResponse")]
        DnDServicePlayer.ServiceReference1.aptitude GetAptitude(uint id_aptitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAptitude", ReplyAction="http://tempuri.org/IService1/GetAptitudeResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.aptitude> GetAptitudeAsync(uint id_aptitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAptitudes", ReplyAction="http://tempuri.org/IService1/GetAptitudesResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetAptitudes(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAptitudes", ReplyAction="http://tempuri.org/IService1/GetAptitudesResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetAptitudesAsync(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterAptitudes", ReplyAction="http://tempuri.org/IService1/GetCharacterAptitudesResponse")]
        DnDServicePlayer.ServiceReference1.aptitude[] GetCharacterAptitudes(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterAptitudes", ReplyAction="http://tempuri.org/IService1/GetCharacterAptitudesResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.aptitude[]> GetCharacterAptitudesAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMulticlass", ReplyAction="http://tempuri.org/IService1/GetMulticlassResponse")]
        DnDServicePlayer.ServiceReference1.multiclass GetMulticlass(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMulticlass", ReplyAction="http://tempuri.org/IService1/GetMulticlassResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multiclass> GetMulticlassAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShortMulticlass", ReplyAction="http://tempuri.org/IService1/GetShortMulticlassResponse")]
        DnDServicePlayer.ServiceReference1.multientity GetShortMulticlass(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShortMulticlass", ReplyAction="http://tempuri.org/IService1/GetShortMulticlassResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multientity> GetShortMulticlassAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassTemplate", ReplyAction="http://tempuri.org/IService1/GetClassTemplateResponse")]
        DnDServicePlayer.ServiceReference1.template GetClassTemplate(uint id_class, uint level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassTemplate", ReplyAction="http://tempuri.org/IService1/GetClassTemplateResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetClassTemplateAsync(uint id_class, uint level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeities", ReplyAction="http://tempuri.org/IService1/GetDeitiesResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetDeities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeities", ReplyAction="http://tempuri.org/IService1/GetDeitiesResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetDeitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeity", ReplyAction="http://tempuri.org/IService1/GetDeityResponse")]
        DnDServicePlayer.ServiceReference1.short_entity GetDeity(uint deity_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeity", ReplyAction="http://tempuri.org/IService1/GetDeityResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetDeityAsync(uint deity_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterAge", ReplyAction="http://tempuri.org/IService1/GetCharacterAgeResponse")]
        System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> GetCharacterAge(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterAge", ReplyAction="http://tempuri.org/IService1/GetCharacterAgeResponse")]
        System.Threading.Tasks.Task<System.Tuple<uint, DnDServicePlayer.ServiceReference1.category>> GetCharacterAgeAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterWeight", ReplyAction="http://tempuri.org/IService1/GetCharacterWeightResponse")]
        System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> GetCharacterWeight(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterWeight", ReplyAction="http://tempuri.org/IService1/GetCharacterWeightResponse")]
        System.Threading.Tasks.Task<System.Tuple<uint, DnDServicePlayer.ServiceReference1.category>> GetCharacterWeightAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterHeight", ReplyAction="http://tempuri.org/IService1/GetCharacterHeightResponse")]
        System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> GetCharacterHeight(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterHeight", ReplyAction="http://tempuri.org/IService1/GetCharacterHeightResponse")]
        System.Threading.Tasks.Task<System.Tuple<uint, DnDServicePlayer.ServiceReference1.category>> GetCharacterHeightAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAgeCategory", ReplyAction="http://tempuri.org/IService1/GetAgeCategoryResponse")]
        DnDServicePlayer.ServiceReference1.category GetAgeCategory(uint id_age_category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAgeCategory", ReplyAction="http://tempuri.org/IService1/GetAgeCategoryResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.category> GetAgeCategoryAsync(uint id_age_category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWeightCategory", ReplyAction="http://tempuri.org/IService1/GetWeightCategoryResponse")]
        DnDServicePlayer.ServiceReference1.category GetWeightCategory(uint id_weight_category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWeightCategory", ReplyAction="http://tempuri.org/IService1/GetWeightCategoryResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.category> GetWeightCategoryAsync(uint id_weight_category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHeightCategory", ReplyAction="http://tempuri.org/IService1/GetHeightCategoryResponse")]
        DnDServicePlayer.ServiceReference1.category GetHeightCategory(uint id_height_category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHeightCategory", ReplyAction="http://tempuri.org/IService1/GetHeightCategoryResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.category> GetHeightCategoryAsync(uint id_height_category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterGifts", ReplyAction="http://tempuri.org/IService1/GetCharacterGiftsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterGifts(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterGifts", ReplyAction="http://tempuri.org/IService1/GetCharacterGiftsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterGiftsAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGift", ReplyAction="http://tempuri.org/IService1/GetGiftResponse")]
        DnDServicePlayer.ServiceReference1.gift GetGift(uint id_gift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGift", ReplyAction="http://tempuri.org/IService1/GetGiftResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.gift> GetGiftAsync(uint id_gift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGifts", ReplyAction="http://tempuri.org/IService1/GetGiftsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetGifts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGifts", ReplyAction="http://tempuri.org/IService1/GetGiftsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetGiftsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEffect", ReplyAction="http://tempuri.org/IService1/GetEffectResponse")]
        DnDServicePlayer.ServiceReference1.short_entity GetEffect(uint id_effect);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEffect", ReplyAction="http://tempuri.org/IService1/GetEffectResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetEffectAsync(uint id_effect);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEffects", ReplyAction="http://tempuri.org/IService1/GetEffectsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetEffects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEffects", ReplyAction="http://tempuri.org/IService1/GetEffectsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetEffectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterEffects", ReplyAction="http://tempuri.org/IService1/GetCharacterEffectsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterEffects(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterEffects", ReplyAction="http://tempuri.org/IService1/GetCharacterEffectsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterEffectsAsync(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkillEffects", ReplyAction="http://tempuri.org/IService1/GetSkillEffectsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetSkillEffects(uint id_skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkillEffects", ReplyAction="http://tempuri.org/IService1/GetSkillEffectsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetSkillEffectsAsync(uint id_skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkillConditions", ReplyAction="http://tempuri.org/IService1/GetSkillConditionsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetSkillConditions(uint id_skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkillConditions", ReplyAction="http://tempuri.org/IService1/GetSkillConditionsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetSkillConditionsAsync(uint id_skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassEffects", ReplyAction="http://tempuri.org/IService1/GetClassEffectsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetClassEffects(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClassEffects", ReplyAction="http://tempuri.org/IService1/GetClassEffectsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetClassEffectsAsync(uint id_class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceEffects", ReplyAction="http://tempuri.org/IService1/GetRaceEffectsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetRaceEffects(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRaceEffects", ReplyAction="http://tempuri.org/IService1/GetRaceEffectsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceEffectsAsync(uint id_race);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkill", ReplyAction="http://tempuri.org/IService1/GetSkillResponse")]
        DnDServicePlayer.ServiceReference1.skill GetSkill(uint id_skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkill", ReplyAction="http://tempuri.org/IService1/GetSkillResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.skill> GetSkillAsync(uint id_skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkills", ReplyAction="http://tempuri.org/IService1/GetSkillsResponse")]
        DnDServicePlayer.ServiceReference1.short_entity[] GetSkills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSkills", ReplyAction="http://tempuri.org/IService1/GetSkillsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetSkillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterSkills", ReplyAction="http://tempuri.org/IService1/GetCharacterSkillsResponse")]
        DnDServicePlayer.ServiceReference1.multiskill GetCharacterSkills(uint id_character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterSkills", ReplyAction="http://tempuri.org/IService1/GetCharacterSkillsResponse")]
        System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multiskill> GetCharacterSkillsAsync(uint id_character);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : DnDServicePlayer.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DnDServicePlayer.ServiceReference1.IService1>, DnDServicePlayer.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public uint AccountConnection(string user, string pass) {
            return base.Channel.AccountConnection(user, pass);
        }
        
        public System.Threading.Tasks.Task<uint> AccountConnectionAsync(string user, string pass) {
            return base.Channel.AccountConnectionAsync(user, pass);
        }
        
        public uint AccountCreate(string user, string pass, string mail) {
            return base.Channel.AccountCreate(user, pass, mail);
        }
        
        public System.Threading.Tasks.Task<uint> AccountCreateAsync(string user, string pass, string mail) {
            return base.Channel.AccountCreateAsync(user, pass, mail);
        }
        
        public bool AccountDelete(int account_id) {
            return base.Channel.AccountDelete(account_id);
        }
        
        public System.Threading.Tasks.Task<bool> AccountDeleteAsync(int account_id) {
            return base.Channel.AccountDeleteAsync(account_id);
        }
        
        public string GetAccountName(uint account_id) {
            return base.Channel.GetAccountName(account_id);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountNameAsync(uint account_id) {
            return base.Channel.GetAccountNameAsync(account_id);
        }
        
        public int CharacterCreate(DnDServicePlayer.ServiceReference1.character player) {
            return base.Channel.CharacterCreate(player);
        }
        
        public System.Threading.Tasks.Task<int> CharacterCreateAsync(DnDServicePlayer.ServiceReference1.character player) {
            return base.Channel.CharacterCreateAsync(player);
        }
        
        public bool CharacterDelete(uint character_id) {
            return base.Channel.CharacterDelete(character_id);
        }
        
        public System.Threading.Tasks.Task<bool> CharacterDeleteAsync(uint character_id) {
            return base.Channel.CharacterDeleteAsync(character_id);
        }
        
        public bool CharacterUpdate(DnDServicePlayer.ServiceReference1.character player) {
            return base.Channel.CharacterUpdate(player);
        }
        
        public System.Threading.Tasks.Task<bool> CharacterUpdateAsync(DnDServicePlayer.ServiceReference1.character player) {
            return base.Channel.CharacterUpdateAsync(player);
        }
        
        public DnDServicePlayer.ServiceReference1.character GetCharacter(uint character_id) {
            return base.Channel.GetCharacter(character_id);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.character> GetCharacterAsync(uint character_id) {
            return base.Channel.GetCharacterAsync(character_id);
        }
        
        public DnDServicePlayer.ServiceReference1.short_character[] GetCharacters(uint id_account) {
            return base.Channel.GetCharacters(id_account);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_character[]> GetCharactersAsync(uint id_account) {
            return base.Channel.GetCharactersAsync(id_account);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetRaceShortList() {
            return base.Channel.GetRaceShortList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceShortListAsync() {
            return base.Channel.GetRaceShortListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetClassShortList() {
            return base.Channel.GetClassShortList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetClassShortListAsync() {
            return base.Channel.GetClassShortListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity GetShortClass(uint id_class) {
            return base.Channel.GetShortClass(id_class);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetShortClassAsync(uint id_class) {
            return base.Channel.GetShortClassAsync(id_class);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity GetShortRace(uint id_race) {
            return base.Channel.GetShortRace(id_race);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetShortRaceAsync(uint id_race) {
            return base.Channel.GetShortRaceAsync(id_race);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetCharacteristicShortList() {
            return base.Channel.GetCharacteristicShortList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacteristicShortListAsync() {
            return base.Channel.GetCharacteristicShortListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.template GetTemplate(uint id_template) {
            return base.Channel.GetTemplate(id_template);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetTemplateAsync(uint id_template) {
            return base.Channel.GetTemplateAsync(id_template);
        }
        
        public DnDServicePlayer.ServiceReference1.template GetDefaultTemplate() {
            return base.Channel.GetDefaultTemplate();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetDefaultTemplateAsync() {
            return base.Channel.GetDefaultTemplateAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetLanguageList() {
            return base.Channel.GetLanguageList();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetLanguageListAsync() {
            return base.Channel.GetLanguageListAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetRaceLanguage(uint id_race) {
            return base.Channel.GetRaceLanguage(id_race);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceLanguageAsync(uint id_race) {
            return base.Channel.GetRaceLanguageAsync(id_race);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterLanguage(uint id_character) {
            return base.Channel.GetCharacterLanguage(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterLanguageAsync(uint id_character) {
            return base.Channel.GetCharacterLanguageAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.complete_class GetClass(uint id_class) {
            return base.Channel.GetClass(id_class);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_class> GetClassAsync(uint id_class) {
            return base.Channel.GetClassAsync(id_class);
        }
        
        public DnDServicePlayer.ServiceReference1.complete_race GetRace(uint id_race) {
            return base.Channel.GetRace(id_race);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.complete_race> GetRaceAsync(uint id_race) {
            return base.Channel.GetRaceAsync(id_race);
        }
        
        public DnDServicePlayer.ServiceReference1.characteristic[] GetTemplateCharacteristics(uint id_template, uint id_type) {
            return base.Channel.GetTemplateCharacteristics(id_template, id_type);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetTemplateCharacteristicsAsync(uint id_template, uint id_type) {
            return base.Channel.GetTemplateCharacteristicsAsync(id_template, id_type);
        }
        
        public DnDServicePlayer.ServiceReference1.characteristic[] GetCharacterCharacteristics(uint id_character, uint id_type) {
            return base.Channel.GetCharacterCharacteristics(id_character, id_type);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetCharacterCharacteristicsAsync(uint id_character, uint id_type) {
            return base.Channel.GetCharacterCharacteristicsAsync(id_character, id_type);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity GetCharacteristicType(uint id_type) {
            return base.Channel.GetCharacteristicType(id_type);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetCharacteristicTypeAsync(uint id_type) {
            return base.Channel.GetCharacteristicTypeAsync(id_type);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetCharacteristicTypes() {
            return base.Channel.GetCharacteristicTypes();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacteristicTypesAsync() {
            return base.Channel.GetCharacteristicTypesAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.characteristic GetCharacteristic(uint id_characteristic) {
            return base.Channel.GetCharacteristic(id_characteristic);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic> GetCharacteristicAsync(uint id_characteristic) {
            return base.Channel.GetCharacteristicAsync(id_characteristic);
        }
        
        public DnDServicePlayer.ServiceReference1.characteristic[] GetCharacteristics(uint id_type) {
            return base.Channel.GetCharacteristics(id_type);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.characteristic[]> GetCharacteristicsAsync(uint id_type) {
            return base.Channel.GetCharacteristicsAsync(id_type);
        }
        
        public DnDServicePlayer.ServiceReference1.aptitude GetAptitude(uint id_aptitude) {
            return base.Channel.GetAptitude(id_aptitude);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.aptitude> GetAptitudeAsync(uint id_aptitude) {
            return base.Channel.GetAptitudeAsync(id_aptitude);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetAptitudes(uint id_class) {
            return base.Channel.GetAptitudes(id_class);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetAptitudesAsync(uint id_class) {
            return base.Channel.GetAptitudesAsync(id_class);
        }
        
        public DnDServicePlayer.ServiceReference1.aptitude[] GetCharacterAptitudes(uint id_character) {
            return base.Channel.GetCharacterAptitudes(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.aptitude[]> GetCharacterAptitudesAsync(uint id_character) {
            return base.Channel.GetCharacterAptitudesAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.multiclass GetMulticlass(uint id_character) {
            return base.Channel.GetMulticlass(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multiclass> GetMulticlassAsync(uint id_character) {
            return base.Channel.GetMulticlassAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.multientity GetShortMulticlass(uint id_character) {
            return base.Channel.GetShortMulticlass(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multientity> GetShortMulticlassAsync(uint id_character) {
            return base.Channel.GetShortMulticlassAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.template GetClassTemplate(uint id_class, uint level) {
            return base.Channel.GetClassTemplate(id_class, level);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.template> GetClassTemplateAsync(uint id_class, uint level) {
            return base.Channel.GetClassTemplateAsync(id_class, level);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetDeities() {
            return base.Channel.GetDeities();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetDeitiesAsync() {
            return base.Channel.GetDeitiesAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity GetDeity(uint deity_id) {
            return base.Channel.GetDeity(deity_id);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetDeityAsync(uint deity_id) {
            return base.Channel.GetDeityAsync(deity_id);
        }
        
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> GetCharacterAge(uint id_character) {
            return base.Channel.GetCharacterAge(id_character);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<uint, DnDServicePlayer.ServiceReference1.category>> GetCharacterAgeAsync(uint id_character) {
            return base.Channel.GetCharacterAgeAsync(id_character);
        }
        
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> GetCharacterWeight(uint id_character) {
            return base.Channel.GetCharacterWeight(id_character);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<uint, DnDServicePlayer.ServiceReference1.category>> GetCharacterWeightAsync(uint id_character) {
            return base.Channel.GetCharacterWeightAsync(id_character);
        }
        
        public System.Tuple<uint, DnDServicePlayer.ServiceReference1.category> GetCharacterHeight(uint id_character) {
            return base.Channel.GetCharacterHeight(id_character);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<uint, DnDServicePlayer.ServiceReference1.category>> GetCharacterHeightAsync(uint id_character) {
            return base.Channel.GetCharacterHeightAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.category GetAgeCategory(uint id_age_category) {
            return base.Channel.GetAgeCategory(id_age_category);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.category> GetAgeCategoryAsync(uint id_age_category) {
            return base.Channel.GetAgeCategoryAsync(id_age_category);
        }
        
        public DnDServicePlayer.ServiceReference1.category GetWeightCategory(uint id_weight_category) {
            return base.Channel.GetWeightCategory(id_weight_category);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.category> GetWeightCategoryAsync(uint id_weight_category) {
            return base.Channel.GetWeightCategoryAsync(id_weight_category);
        }
        
        public DnDServicePlayer.ServiceReference1.category GetHeightCategory(uint id_height_category) {
            return base.Channel.GetHeightCategory(id_height_category);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.category> GetHeightCategoryAsync(uint id_height_category) {
            return base.Channel.GetHeightCategoryAsync(id_height_category);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterGifts(uint id_character) {
            return base.Channel.GetCharacterGifts(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterGiftsAsync(uint id_character) {
            return base.Channel.GetCharacterGiftsAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.gift GetGift(uint id_gift) {
            return base.Channel.GetGift(id_gift);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.gift> GetGiftAsync(uint id_gift) {
            return base.Channel.GetGiftAsync(id_gift);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetGifts() {
            return base.Channel.GetGifts();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetGiftsAsync() {
            return base.Channel.GetGiftsAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity GetEffect(uint id_effect) {
            return base.Channel.GetEffect(id_effect);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity> GetEffectAsync(uint id_effect) {
            return base.Channel.GetEffectAsync(id_effect);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetEffects() {
            return base.Channel.GetEffects();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetEffectsAsync() {
            return base.Channel.GetEffectsAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetCharacterEffects(uint id_character) {
            return base.Channel.GetCharacterEffects(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetCharacterEffectsAsync(uint id_character) {
            return base.Channel.GetCharacterEffectsAsync(id_character);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetSkillEffects(uint id_skill) {
            return base.Channel.GetSkillEffects(id_skill);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetSkillEffectsAsync(uint id_skill) {
            return base.Channel.GetSkillEffectsAsync(id_skill);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetSkillConditions(uint id_skill) {
            return base.Channel.GetSkillConditions(id_skill);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetSkillConditionsAsync(uint id_skill) {
            return base.Channel.GetSkillConditionsAsync(id_skill);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetClassEffects(uint id_class) {
            return base.Channel.GetClassEffects(id_class);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetClassEffectsAsync(uint id_class) {
            return base.Channel.GetClassEffectsAsync(id_class);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetRaceEffects(uint id_race) {
            return base.Channel.GetRaceEffects(id_race);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetRaceEffectsAsync(uint id_race) {
            return base.Channel.GetRaceEffectsAsync(id_race);
        }
        
        public DnDServicePlayer.ServiceReference1.skill GetSkill(uint id_skill) {
            return base.Channel.GetSkill(id_skill);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.skill> GetSkillAsync(uint id_skill) {
            return base.Channel.GetSkillAsync(id_skill);
        }
        
        public DnDServicePlayer.ServiceReference1.short_entity[] GetSkills() {
            return base.Channel.GetSkills();
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.short_entity[]> GetSkillsAsync() {
            return base.Channel.GetSkillsAsync();
        }
        
        public DnDServicePlayer.ServiceReference1.multiskill GetCharacterSkills(uint id_character) {
            return base.Channel.GetCharacterSkills(id_character);
        }
        
        public System.Threading.Tasks.Task<DnDServicePlayer.ServiceReference1.multiskill> GetCharacterSkillsAsync(uint id_character) {
            return base.Channel.GetCharacterSkillsAsync(id_character);
        }
    }
}
